var TimeUnits = function(unit) {
    // Enum representing available time units
    this._timerUnit ={
        NANOSECONDS: 1,
        MICROSECONDS: 2,
        MILLISECONDS: 3,
        SECONDS: 4,
        MINUTES: 5,
        HOURS: 6,
        DAYS: 7,
    };
    
    // C++ std::chrono macros
    this._cppTimeUnit = {
        1: "nanoseconds",
        2: "microseconds",
        3: "milliseconds",
        4: "seconds",
        5: "minutes",
        6: "hours",
        7: undefined,
    };
    
    // units string value for output
    this._unitsString = {
        1: "ns",
        2: "us",
        3: "ms",
        4: "s",
        5: "minutes",
        6: "hours",
        7: "days",
    };

    // C conversion from seconds to other magintudes through multiplication
    this._magnitudeFactorSeconds = {
        1: 1000000000,
        2: 1000000,
        3: 1000,
        4: 1,
        5: "1/60",
        6: "1/3600",
        7: "1/86400",
    };
    // Java conversion from nanoseconds to other magintudes through multiplication
    this._magnitudeFactorNanoseconds = {
        1: 1,
        2: 1000,
        3: 1000000,
        4: 1000000000,
        5: 60000000000,
        6: 3600000000000,
        7: 86400000000000,
    };
    
    // Read the unit or ude the default
    this.unit = unit === undefined?this._timerUnit.MILLISECONDS : unit;
};

TimeUnits.prototype.getUnitsString = function() {
    return this._unitsString[this.unit];
}
TimeUnits.prototype.getCppTimeUnit = function() {
    return this._cppTimeUnit[this.unit];
}
TimeUnits.prototype.getMagnitudeFactorFromSeconds = function() {
    return this._magnitudeFactorSeconds[this.unit];
}
TimeUnits.prototype.getMagnitudeFactorFromNanoseconds = function() {
    return this._magnitudeFactorNanoseconds[this.unit];
}